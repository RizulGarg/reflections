How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The difference between the code was important as the file was running fine before the chance, so the chance was what made it to malfunction.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Because of having the entire history of a file, we can undo the mistakes made by just comparing the files and not going through the code thoroughly to find the mistake.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros:
    less storage space is used and useless changes are not stored.
    It takes less space

    Cons:
    Errors can seep in through unforeseen mistakes. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    I have no clue, probably because documents are different and are usually independant of each other while with git, we save projects which should be saved as one complete entity.

How can you use the commands git log and git diff to view the history of files?

	git diff would give the difference between two versions.
	git log would show the log of the changes and the saves.

How might using version control make you more confident to make changes that
could break something?

	Knowing that even if you completely ruin the program, you can get the working version back by just one commmand gives you a lot of confidence to mess around.

Now that you have your workspace set up, what do you want to try using Git for?

    To mess around with stuff


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	Having different versions of your code would mean that you have different versions of your file which run differently, so that gives you the ability to control and compare the different versions and see what works better.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

	Pros:
	The commits are logical and can work as separate entities by themselves.

	Cons:
	You can forget to commit and run into a lot of problems when mistakes accumulate.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

	Because git saves projects that usually require more than 1 file to work while in GDocs, every document is usually unrelated to others!


How can you use the commands git log and git diff to view the history of files?

	git log is used to view all the commits and the comments associated with them
	git diff is used to find the difference between two commits

How might using version control make you more confident to make changes that could break something?

	using version control, if a bug is introduced, it is easy to restore the files to previous commits and find the bug in order to fix it, so it provides a lot of confidence.


Now that you have your workspace set up, what do you want to try using Git for?

	To change stuff into people's projects and see what changes occur when changing one single line of code.

	